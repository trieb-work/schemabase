name: Integration

# All required 3rd party services are hosted in docker containers.
#
# The webhooks service is started inside a docker container as well and all
# integration tests are being run with a fresh database seed

on:
  pull_request:

jobs:
  e2e:
    name: Integration
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        saleor: [
            "3.0-triebwork7", # actually v2
            "3.0.0-b.13-triebwork1", # v3 latest
          ]
    env:
      SALEOR_VERSION: ${{ matrix.saleor }}
      CI: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Install dependencies
        run: yarn install --frozen-lockfile --non-interactive

        # Necesarry to test against the predefined saleor versions
      - name: Use docker-compose ci config
        run: cp docker-compose.ci.yml docker-compose.override.yml

        # The latest docker-compose has trouble building remote images because it cannot
        # run `git clone` due to openssl requirements. This will manually downgrade docker-compose
        # to a version that works.
      - name: Fix docker-compose version
        run: sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

      - name: Start services
        run: docker-compose up -d

      - name: Migrate saleor schema
        run: docker-compose exec -T saleor_api python manage.py migrate

      - name: Seed saleor database
        run: docker-compose exec -T saleor_api python manage.py populatedb --createsuperuser

      - name: Migrate eci schema
        run: yarn prisma migrate deploy --schema=./libs/data-access/prisma/schema.prisma
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres

      - name: Generate prisma client
        run: yarn nx build data-access-prisma

      - name: Seed eci database
        run: yarn prisma db seed --preview-feature --schema=./libs/data-access/prisma/schema.prisma
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
          SALEOR_TEMPORARY_APP_TOKEN: abc
      - name: Test (e2e)
        run: yarn nx run e2e:e2e
        env:
          ECI_BASE_URL: http://localhost:3000
      #   continue-on-error: true
      # - name: Get logs
      #   run: docker-compose logs eci_webhooks
