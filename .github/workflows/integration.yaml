name: Integration

# All required 3rd party services are hosted in docker containers and available
# via localhost.
#
# The webhooks service is started inside a docker container as well and all
# integration tests are being run with a fresh database seed

on:
  pull_request:

jobs:
  tests:
    name: Integration
    runs-on: ubuntu-latest
    strategy:
      matrix:
        saleor: ["3.0-triebwork7", "3.0-triebwork11"]

    services:
      # Our own database where we store tenants and config
      eci_db:
        image: postgres
        ports:
          # Must be exposed on the host for prisma to migrate and seed
          - "5432:5432"
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

      # Saleor Graphql API
      saleor_api:
        ports:
          - 8000:8000
        image: registry.gitlab.com/trieb.work/saleor:${{matrix.saleor}}
        env:
          DATABASE_URL: postgres://saleor:saleor@saleor_db:5432/postgres
          SECRET_KEY: super-secret
      # Required by saleor
      saleor_db:
        image: postgres
        env:
          POSTGRES_USER: saleor
          POSTGRES_PASSWORD: saleor

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Build eci
        run: docker build -t eci:latest -f ./apps/e2e/src/Dockerfile .

      - name: Start eci
        run: docker run -d -p "3000:3000" eci:latest

      - name: Apply database schema
        run: npx prisma migrate deploy --schema=./libs/data-access/prisma/schema.prisma --skip-generate

      - name: Seed database
        run: npx prisma db seed --preview-feature --schema=./libs/data-access/prisma/schema.prisma

      - name: Test (e2e)
        run: npx nx test e2e
        env:
          ECI_BASE_URL: http://localhost:3000
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
