{
  "version": 3,
  "pages404": true,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/api/product-data-feed/v1/[variant]/[webhookId]",
      "regex": "^/api/product\\-data\\-feed/v1/([^/]+?)/([^/]+?)(?:/)?$",
      "routeKeys": { "variant": "variant", "webhookId": "webhookId" },
      "namedRegex": "^/api/product\\-data\\-feed/v1/(?<variant>[^/]+?)/(?<webhookId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/saleor/manifest/[tenantId]",
      "regex": "^/api/saleor/manifest/([^/]+?)(?:/)?$",
      "routeKeys": { "tenantId": "tenantId" },
      "namedRegex": "^/api/saleor/manifest/(?<tenantId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/saleor/register/[tenantId]",
      "regex": "^/api/saleor/register/([^/]+?)(?:/)?$",
      "routeKeys": { "tenantId": "tenantId" },
      "namedRegex": "^/api/saleor/register/(?<tenantId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/saleor/webhook/v1/[webhookId]",
      "regex": "^/api/saleor/webhook/v1/([^/]+?)(?:/)?$",
      "routeKeys": { "webhookId": "webhookId" },
      "namedRegex": "^/api/saleor/webhook/v1/(?<webhookId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/strapi/webhook/create/v1/[strapiId]",
      "regex": "^/api/strapi/webhook/create/v1/([^/]+?)(?:/)?$",
      "routeKeys": { "strapiId": "strapiId" },
      "namedRegex": "^/api/strapi/webhook/create/v1/(?<strapiId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/strapi/webhook/v1/[webhookId]",
      "regex": "^/api/strapi/webhook/v1/([^/]+?)(?:/)?$",
      "routeKeys": { "webhookId": "webhookId" },
      "namedRegex": "^/api/strapi/webhook/v1/(?<webhookId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/zoho/logistics/create/v1/[logisticsAppId]",
      "regex": "^/api/zoho/logistics/create/v1/([^/]+?)(?:/)?$",
      "routeKeys": { "logisticsAppId": "logisticsAppId" },
      "namedRegex": "^/api/zoho/logistics/create/v1/(?<logisticsAppId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/zoho/logistics/v1/[webhookId]",
      "regex": "^/api/zoho/logistics/v1/([^/]+?)(?:/)?$",
      "routeKeys": { "webhookId": "webhookId" },
      "namedRegex": "^/api/zoho/logistics/v1/(?<webhookId>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [],
  "dataRoutes": [],
  "rewrites": []
}
